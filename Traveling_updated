import java.util.Iterator;
import java.util.LinkedList;
import java.util.ListIterator;
import java.util.Scanner;

public class Traveling {
    public static void main(String[] args) {
        LinkedList<String> placeToVisit=new LinkedList<String>();
        //placeToVisit.add("Jammu");
        //placeToVisit.add("Kashmir");
        //placeToVisit.add("Jalandhar");
        //placeToVisit.add("Chnadigarh");
        //placeToVisit.add("Bareily");
        //placeToVisit.add("Delhi");
        //placeToVisit.add("Banglore");
        //printVisited(placeToVisit);
        //placeToVisit.add(6,"Lucknow");
        //printVisited(placeToVisit);

        //placeToVisit.remove(5);
        //printVisited(placeToVisit);
        newVisit(placeToVisit,"Jammu");
        newVisit(placeToVisit,"Kashmir");
        newVisit(placeToVisit,"Jalandhar");
        newVisit(placeToVisit,"Chandigarh");
        newVisit(placeToVisit,"Bareily");
        newVisit(placeToVisit,"Delhi");
        newVisit(placeToVisit,"Banglore");
        newVisit(placeToVisit,"Lucknow");


        printVisited(placeToVisit);
        newVisit(placeToVisit,"Lakhimpur");
        newVisit(placeToVisit,"Utrakhand");
        printVisited(placeToVisit);

        placeToVisit.remove(5);

        printVisited(placeToVisit);
        visit(placeToVisit);



    }
    private static void printVisited(LinkedList<String> linkedList){
        Iterator<String> i= linkedList.iterator();
        while(i.hasNext())
        {
            System.out.println("Places to visit "+i.next());
        }
        System.out.println("=======================================");
    }
    private static boolean newVisit(LinkedList<String> linkedList,String newCity){
        ListIterator<String> newCityVisit = linkedList.listIterator();
        while(newCityVisit.hasNext()){
            int compare=newCityVisit.next().compareTo(newCity);
            if(compare == 0)
            {
                System.out.println("City already included");
                return false;
            }
            else if(compare > 0){
                newCityVisit.previous();
                newCityVisit.add(newCity);
                return true;
            }
            else if(compare < 0){
            }

        }
        newCityVisit.add(newCity);
        return true;
    }
    private static void visit(LinkedList cities){
        Scanner sc=new Scanner(System.in);
        ListIterator<String> listIterator=cities.listIterator();
        boolean quit=false;
        boolean goingforward=true;
        if(cities.getFirst()==""){
                System.out.println("No cities in the itenerary");
                return;
            }
            else {
                System.out.println("now visiting"+listIterator.next());
            printMenu();
            }
            while(!quit){
                int action=sc.nextInt();
                sc.nextLine();

                switch(action) {
                    case 0:
                        System.out.println("Holiday over");
                        quit = true;
                        break;
                    case 1:
                        if(!goingforward){
                            if(listIterator.hasNext())
                            {
                                listIterator.next();
                            }
                            goingforward=true;
                        }
                        if (listIterator.hasNext()) {
                            System.out.println("now visiting =" + listIterator.next());
                        } else {
                            System.out.println("Reached end");
                        goingforward=false;
                        }
                        break;
                    case 2:
                        if(goingforward){
                            if(listIterator.hasPrevious()){
                                listIterator.previous();
                            }
                            goingforward=false;
                        }
                        if (listIterator.hasPrevious()) {
                            System.out.println("Now visitng " + listIterator.previous());
                        } else {
                            System.out.println("Reached starting");
                        }
                        break;
                    case 3:
                        printMenu();
                        break;
                    default:
                        System.out.println("No choice made");


                }
            }

    }
    private static void printMenu(){
        System.out.println("Enter 0 to end trip \n" +
                "Enter 1 to go next city\n" +
                "Etner 2 to go previous cities \n" +
                "Enter 3 to print menu options");
    }



}
