import java.util.Arrays;
import java.util.Scanner;
public class Main {
    private static Scanner sc=new Scanner(System.in);
    public static void main(String[] args) {
        int[] intVallues=getValues(5);
        int[] sort = sortArray(intVallues);
        System.out.println("in dscending order :\n");
        printArray(sort);
        int[] asc=sortArrayinasc(intVallues);
        System.out.println("in asccending order :\n");
        printArray(asc);


    }
    public static int[] getValues(int no){
    int[] array =new int[no];
        System.out.println("Enter Elements in array of size "+no+"\n");
        for(int i=0; i<array.length; i++){
            array[i]=sc.nextInt();
        }
        return array;
    }
    public static void printArray(int[] array){
        for(int i=0; i<array.length; i++){
            System.out.println("Element at index "+ i +" is  --> "+array[i]);
        }
    }
    public static int[] sortArray(int[] array){
        int[] sortedArray= Arrays.copyOf(array,array.length);
        boolean flag=true;
        while(flag){
            flag=false;
            for(int i=0; i<sortedArray.length-1; i++){
                if(sortedArray[i] < sortedArray[ i+1 ]){
                    int temp = sortedArray[i];
                    sortedArray[i] = sortedArray[ i+1 ];
                    sortedArray[ i+1 ] = temp;
                    flag=true;
                }
            }
        }
        return sortedArray;
    }
    public static int[] sortArrayinasc(int[] array){
        int[] ascsortedArray= Arrays.copyOf(array,array.length);
        boolean flag=true;
        while(flag){
            flag=false;
            for(int i=0; i<ascsortedArray.length-1; i++){
                if(ascsortedArray[i] > ascsortedArray[ i+1 ]){
                    int temp = ascsortedArray[i+1];
                    ascsortedArray[i+1] = ascsortedArray[ i ];
                    ascsortedArray[ i ] = temp;
                    flag=true;
                }
            }
        }
        return ascsortedArray;
    }
}
